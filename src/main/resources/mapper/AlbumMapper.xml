<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiuge.songs.mapper.AlbumMapper">
  <resultMap id="BaseResultMap" type="com.jiuge.songs.bean.Album">
    <id column="album_ID" jdbcType="INTEGER" property="album_ID" />
    <result column="a_name" jdbcType="VARCHAR" property="a_name" />
    <result column="a_image" jdbcType="VARCHAR" property="a_image" />
    <result column="a_language" jdbcType="VARCHAR" property="a_language" />
    <result column="a_style" jdbcType="VARCHAR" property="a_style" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    album_ID, a_name, a_image, a_language, a_style
  </sql>
  <select id="selectByExample" parameterType="com.jiuge.songs.bean.AlbumExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from album
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from album
    where album_ID = #{album_ID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from album
    where album_ID = #{album_ID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jiuge.songs.bean.AlbumExample">
    delete from album
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiuge.songs.bean.Album">
    insert into album (album_ID, a_name, a_image, 
      a_language, a_style)
    values (#{album_ID,jdbcType=INTEGER}, #{a_name,jdbcType=VARCHAR}, #{a_image,jdbcType=VARCHAR}, 
      #{a_language,jdbcType=VARCHAR}, #{a_style,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jiuge.songs.bean.Album">
    insert into album
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="album_ID != null">
        album_ID,
      </if>
      <if test="a_name != null">
        a_name,
      </if>
      <if test="a_image != null">
        a_image,
      </if>
      <if test="a_language != null">
        a_language,
      </if>
      <if test="a_style != null">
        a_style,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="album_ID != null">
        #{album_ID,jdbcType=INTEGER},
      </if>
      <if test="a_name != null">
        #{a_name,jdbcType=VARCHAR},
      </if>
      <if test="a_image != null">
        #{a_image,jdbcType=VARCHAR},
      </if>
      <if test="a_language != null">
        #{a_language,jdbcType=VARCHAR},
      </if>
      <if test="a_style != null">
        #{a_style,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiuge.songs.bean.AlbumExample" resultType="java.lang.Long">
    select count(*) from album
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update album
    <set>
      <if test="record.album_ID != null">
        album_ID = #{record.album_ID,jdbcType=INTEGER},
      </if>
      <if test="record.a_name != null">
        a_name = #{record.a_name,jdbcType=VARCHAR},
      </if>
      <if test="record.a_image != null">
        a_image = #{record.a_image,jdbcType=VARCHAR},
      </if>
      <if test="record.a_language != null">
        a_language = #{record.a_language,jdbcType=VARCHAR},
      </if>
      <if test="record.a_style != null">
        a_style = #{record.a_style,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update album
    set album_ID = #{record.album_ID,jdbcType=INTEGER},
      a_name = #{record.a_name,jdbcType=VARCHAR},
      a_image = #{record.a_image,jdbcType=VARCHAR},
      a_language = #{record.a_language,jdbcType=VARCHAR},
      a_style = #{record.a_style,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiuge.songs.bean.Album">
    update album
    <set>
      <if test="a_name != null">
        a_name = #{a_name,jdbcType=VARCHAR},
      </if>
      <if test="a_image != null">
        a_image = #{a_image,jdbcType=VARCHAR},
      </if>
      <if test="a_language != null">
        a_language = #{a_language,jdbcType=VARCHAR},
      </if>
      <if test="a_style != null">
        a_style = #{a_style,jdbcType=VARCHAR},
      </if>
    </set>
    where album_ID = #{album_ID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiuge.songs.bean.Album">
    update album
    set a_name = #{a_name,jdbcType=VARCHAR},
      a_image = #{a_image,jdbcType=VARCHAR},
      a_language = #{a_language,jdbcType=VARCHAR},
      a_style = #{a_style,jdbcType=VARCHAR}
    where album_ID = #{album_ID,jdbcType=INTEGER}
  </update>
</mapper>