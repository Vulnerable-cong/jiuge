<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiuge.songs.mapper.CollectionMapper">
  <resultMap id="BaseResultMap" type="com.jiuge.songs.bean.Collection">
    <id column="collection_ID" jdbcType="INTEGER" property="collection_ID" />
    <result column="song_ID" jdbcType="INTEGER" property="song_ID" />
    <result column="user_ID" jdbcType="INTEGER" property="user_ID" />
    <result column="c_name" jdbcType="VARCHAR" property="c_name" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    collection_ID, song_ID, user_ID, c_name, createtime
  </sql>
  <select id="selectByExample" parameterType="com.jiuge.songs.bean.CollectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collection
    where collection_ID = #{collection_ID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collection
    where collection_ID = #{collection_ID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jiuge.songs.bean.CollectionExample">
    delete from collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiuge.songs.bean.Collection">
    insert into collection (collection_ID, song_ID, user_ID, 
      c_name, createtime)
    values (#{collection_ID,jdbcType=INTEGER}, #{song_ID,jdbcType=INTEGER}, #{user_ID,jdbcType=INTEGER}, 
      #{c_name,jdbcType=VARCHAR}, #{createtime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.jiuge.songs.bean.Collection">
    insert into collection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collection_ID != null">
        collection_ID,
      </if>
      <if test="song_ID != null">
        song_ID,
      </if>
      <if test="user_ID != null">
        user_ID,
      </if>
      <if test="c_name != null">
        c_name,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collection_ID != null">
        #{collection_ID,jdbcType=INTEGER},
      </if>
      <if test="song_ID != null">
        #{song_ID,jdbcType=INTEGER},
      </if>
      <if test="user_ID != null">
        #{user_ID,jdbcType=INTEGER},
      </if>
      <if test="c_name != null">
        #{c_name,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiuge.songs.bean.CollectionExample" resultType="java.lang.Long">
    select count(*) from collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update collection
    <set>
      <if test="record.collection_ID != null">
        collection_ID = #{record.collection_ID,jdbcType=INTEGER},
      </if>
      <if test="record.song_ID != null">
        song_ID = #{record.song_ID,jdbcType=INTEGER},
      </if>
      <if test="record.user_ID != null">
        user_ID = #{record.user_ID,jdbcType=INTEGER},
      </if>
      <if test="record.c_name != null">
        c_name = #{record.c_name,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update collection
    set collection_ID = #{record.collection_ID,jdbcType=INTEGER},
      song_ID = #{record.song_ID,jdbcType=INTEGER},
      user_ID = #{record.user_ID,jdbcType=INTEGER},
      c_name = #{record.c_name,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiuge.songs.bean.Collection">
    update collection
    <set>
      <if test="song_ID != null">
        song_ID = #{song_ID,jdbcType=INTEGER},
      </if>
      <if test="user_ID != null">
        user_ID = #{user_ID,jdbcType=INTEGER},
      </if>
      <if test="c_name != null">
        c_name = #{c_name,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=DATE},
      </if>
    </set>
    where collection_ID = #{collection_ID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiuge.songs.bean.Collection">
    update collection
    set song_ID = #{song_ID,jdbcType=INTEGER},
      user_ID = #{user_ID,jdbcType=INTEGER},
      c_name = #{c_name,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=DATE}
    where collection_ID = #{collection_ID,jdbcType=INTEGER}
  </update>
</mapper>