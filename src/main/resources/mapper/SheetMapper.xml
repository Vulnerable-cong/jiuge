<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiuge.songs.mapper.SheetMapper">
  <resultMap id="BaseResultMap" type="com.jiuge.songs.bean.Sheet">
    <id column="sheet_ID" jdbcType="INTEGER" property="sheet_ID" />
    <result column="sh_name" jdbcType="VARCHAR" property="sh_name" />
    <result column="user_ID" jdbcType="INTEGER" property="user_ID" />
    <result column="play" jdbcType="INTEGER" property="play" />
    <result column="createtime" jdbcType="DATE" javaType="java.util.Date" property="createtime" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="style" jdbcType="VARCHAR" property="style" />
    <result column="mood" jdbcType="VARCHAR" property="mood" />
    <result column="scene" jdbcType="VARCHAR" property="scene" />
    <result column="sh_image" jdbcType="VARCHAR" property="sh_image" />
  </resultMap>

  <resultMap id="SISResultMap" type="com.jiuge.songs.bean.SongsInSheet">
    <id column="song_ID" jdbcType="INTEGER" property="song_ID" />
    <result column="sheet_ID" jdbcType="INTEGER" property="sheet_ID" />
    <result column="sh_name" jdbcType="VARCHAR" property="sh_name" />
    <result column="s_name" jdbcType="VARCHAR" property="s_name" />
    <result column="singer_ID" jdbcType="INTEGER" property="singer_ID" />
    <result column="si_name" jdbcType="VARCHAR" property="si_name" />
    <result column="style" jdbcType="VARCHAR" property="style" />
    <result column="album_ID" jdbcType="INTEGER" property="album_ID" />
    <result column="a_name" jdbcType="VARCHAR" property="a_name" />
    <result column="a_image" jdbcType="VARCHAR" property="a_image" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="file" jdbcType="VARCHAR" property="file" />
    <result column="duration" jdbcType="TIME" javaType="java.sql.Time" property="duration" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sheet_ID, sh_name, user_ID, play, createtime, language, style, mood, scene, sh_image
  </sql>
  <select id="selectByExample" parameterType="com.jiuge.songs.bean.SheetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sheet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sheet
    where sheet_ID = #{sheet_ID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sheet
    where sheet_ID = #{sheet_ID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jiuge.songs.bean.SheetExample">
    delete from sheet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiuge.songs.bean.Sheet">
    insert into sheet (sheet_ID, sh_name, user_ID, 
      play, createtime, language, 
      style, mood, scene, 
      sh_image)
    values (#{sheet_ID,jdbcType=INTEGER}, #{sh_name,jdbcType=VARCHAR}, #{user_ID,jdbcType=INTEGER}, 
      #{play,jdbcType=INTEGER}, #{createtime,jdbcType=DATE}, #{language,jdbcType=VARCHAR}, 
      #{style,jdbcType=VARCHAR}, #{mood,jdbcType=VARCHAR}, #{scene,jdbcType=VARCHAR}, 
      #{sh_image,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jiuge.songs.bean.Sheet">
    insert into sheet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sheet_ID != null">
        sheet_ID,
      </if>
      <if test="sh_name != null">
        sh_name,
      </if>
      <if test="user_ID != null">
        user_ID,
      </if>
      <if test="play != null">
        play,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="style != null">
        style,
      </if>
      <if test="mood != null">
        mood,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="sh_image != null">
        sh_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sheet_ID != null">
        #{sheet_ID,jdbcType=INTEGER},
      </if>
      <if test="sh_name != null">
        #{sh_name,jdbcType=VARCHAR},
      </if>
      <if test="user_ID != null">
        #{user_ID,jdbcType=INTEGER},
      </if>
      <if test="play != null">
        #{play,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="style != null">
        #{style,jdbcType=VARCHAR},
      </if>
      <if test="mood != null">
        #{mood,jdbcType=VARCHAR},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=VARCHAR},
      </if>
      <if test="sh_image != null">
        #{sh_image,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiuge.songs.bean.SheetExample" resultType="java.lang.Long">
    select count(*) from sheet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sheet
    <set>
      <if test="record.sheet_ID != null">
        sheet_ID = #{record.sheet_ID,jdbcType=INTEGER},
      </if>
      <if test="record.sh_name != null">
        sh_name = #{record.sh_name,jdbcType=VARCHAR},
      </if>
      <if test="record.user_ID != null">
        user_ID = #{record.user_ID,jdbcType=INTEGER},
      </if>
      <if test="record.play != null">
        play = #{record.play,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.style != null">
        style = #{record.style,jdbcType=VARCHAR},
      </if>
      <if test="record.mood != null">
        mood = #{record.mood,jdbcType=VARCHAR},
      </if>
      <if test="record.scene != null">
        scene = #{record.scene,jdbcType=VARCHAR},
      </if>
      <if test="record.sh_image != null">
        sh_image = #{record.sh_image,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sheet
    set sheet_ID = #{record.sheet_ID,jdbcType=INTEGER},
      sh_name = #{record.sh_name,jdbcType=VARCHAR},
      user_ID = #{record.user_ID,jdbcType=INTEGER},
      play = #{record.play,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=DATE},
      language = #{record.language,jdbcType=VARCHAR},
      style = #{record.style,jdbcType=VARCHAR},
      mood = #{record.mood,jdbcType=VARCHAR},
      scene = #{record.scene,jdbcType=VARCHAR},
      sh_image = #{record.sh_image,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiuge.songs.bean.Sheet">
    update sheet
    <set>
      <if test="sh_name != null">
        sh_name = #{sh_name,jdbcType=VARCHAR},
      </if>
      <if test="user_ID != null">
        user_ID = #{user_ID,jdbcType=INTEGER},
      </if>
      <if test="play != null">
        play = #{play,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="style != null">
        style = #{style,jdbcType=VARCHAR},
      </if>
      <if test="mood != null">
        mood = #{mood,jdbcType=VARCHAR},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=VARCHAR},
      </if>
      <if test="sh_image != null">
        sh_image = #{sh_image,jdbcType=VARCHAR},
      </if>
    </set>
    where sheet_ID = #{sheet_ID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiuge.songs.bean.Sheet">
    update sheet
    set sh_name = #{sh_name,jdbcType=VARCHAR},
      user_ID = #{user_ID,jdbcType=INTEGER},
      play = #{play,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=DATE},
      language = #{language,jdbcType=VARCHAR},
      style = #{style,jdbcType=VARCHAR},
      mood = #{mood,jdbcType=VARCHAR},
      scene = #{scene,jdbcType=VARCHAR},
      sh_image = #{sh_image,jdbcType=VARCHAR}
    where sheet_ID = #{sheet_ID,jdbcType=INTEGER}
  </update>

  <select id="getSongsInSheet" resultMap="SISResultMap">
    select sheet.sheet_ID,sheet.sh_name,a.*
        from (select t.* , album.a_name, album.a_image
        from (select song.* ,singer.si_name
        from song Left outer join singer
        on song.singer_ID = singer.singer_ID )as t Left outer join album
        on t.album_ID = album.album_ID) as a,sheet,sheet_song
        where sheet_song.sheet_ID = sheet.sheet_ID and sheet_song.song_ID = a.song_ID
        and sheet.sheet_ID = #{sheet_ID}
  </select>
  
  <select id="getSheetPlay">
    select sheet.play from sheet where sheet_ID=#{sheet_ID}
  </select>
  
  <insert id="insertSongsToSheet" >
    insert into sheet_song (sheet_ID,song_ID) value(#{sheet_ID},#{song_ID})
  </insert>
  
  <delete id="deleteAllSongInSheet">
    delete from sheet_song where sheet_ID=#{sheet_ID}
  </delete>
  
  <delete id="deleteSIS">
    delete from sheet_song where sheet_ID=#{sheet_ID} and song_ID=#{song_ID}
  </delete>
</mapper>