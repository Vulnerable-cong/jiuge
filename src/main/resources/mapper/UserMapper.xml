<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiuge.songs.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.jiuge.songs.bean.User">
    <id column="user_ID" jdbcType="INTEGER" property="user_ID" />
    <result column="u_account" jdbcType="VARCHAR" property="u_account" />
    <result column="u_name" jdbcType="VARCHAR" property="u_name" />
    <result column="u_password" jdbcType="VARCHAR" property="u_password" />
    <result column="u_avatar" jdbcType="VARCHAR" property="u_avatar" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_ID, u_account, u_name, u_password, u_avatar, createtime
  </sql>
  <select id="selectByExample" parameterType="com.jiuge.songs.bean.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_ID = #{user_ID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_ID = #{user_ID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jiuge.songs.bean.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiuge.songs.bean.User">
    insert into user (user_ID, u_account, u_name, 
      u_password, u_avatar, createtime
      )
    values (#{user_ID,jdbcType=INTEGER}, #{u_account,jdbcType=VARCHAR}, #{u_name,jdbcType=VARCHAR}, 
      #{u_password,jdbcType=VARCHAR}, #{u_avatar,jdbcType=VARCHAR}, #{createtime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jiuge.songs.bean.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user_ID != null">
        user_ID,
      </if>
      <if test="u_account != null">
        u_account,
      </if>
      <if test="u_name != null">
        u_name,
      </if>
      <if test="u_password != null">
        u_password,
      </if>
      <if test="u_avatar != null">
        u_avatar,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user_ID != null">
        #{user_ID,jdbcType=INTEGER},
      </if>
      <if test="u_account != null">
        #{u_account,jdbcType=VARCHAR},
      </if>
      <if test="u_name != null">
        #{u_name,jdbcType=VARCHAR},
      </if>
      <if test="u_password != null">
        #{u_password,jdbcType=VARCHAR},
      </if>
      <if test="u_avatar != null">
        #{u_avatar,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiuge.songs.bean.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.user_ID != null">
        user_ID = #{record.user_ID,jdbcType=INTEGER},
      </if>
      <if test="record.u_account != null">
        u_account = #{record.u_account,jdbcType=VARCHAR},
      </if>
      <if test="record.u_name != null">
        u_name = #{record.u_name,jdbcType=VARCHAR},
      </if>
      <if test="record.u_password != null">
        u_password = #{record.u_password,jdbcType=VARCHAR},
      </if>
      <if test="record.u_avatar != null">
        u_avatar = #{record.u_avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_ID = #{record.user_ID,jdbcType=INTEGER},
      u_account = #{record.u_account,jdbcType=VARCHAR},
      u_name = #{record.u_name,jdbcType=VARCHAR},
      u_password = #{record.u_password,jdbcType=VARCHAR},
      u_avatar = #{record.u_avatar,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiuge.songs.bean.User">
    update user
    <set>
      <if test="u_account != null">
        u_account = #{u_account,jdbcType=VARCHAR},
      </if>
      <if test="u_name != null">
        u_name = #{u_name,jdbcType=VARCHAR},
      </if>
      <if test="u_password != null">
        u_password = #{u_password,jdbcType=VARCHAR},
      </if>
      <if test="u_avatar != null">
        u_avatar = #{u_avatar,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=DATE},
      </if>
    </set>
    where user_ID = #{user_ID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiuge.songs.bean.User">
    update user
    set u_account = #{u_account,jdbcType=VARCHAR},
      u_name = #{u_name,jdbcType=VARCHAR},
      u_password = #{u_password,jdbcType=VARCHAR},
      u_avatar = #{u_avatar,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=DATE}
    where user_ID = #{user_ID,jdbcType=INTEGER}
  </update>

</mapper>